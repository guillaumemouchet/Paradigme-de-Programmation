
package ch.hearc.SA.labo2.BlockingQueue;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;

public class Main
	{

	public static void main(String[] args)
		{
		ArrayList<Double> importantValues;
		StringBuilder sb = new StringBuilder();
		sb.append("NbProducteurs;  NbConsommateurs; QueueSize; Elapsed time [ms];Throughput [msg/s];Effective throughput " + "[B/s];Latency [ms]\n");

		// Define arrays for testing values
		int[] nbProducteursArray = { 1 };
		int[] nbConsommateursArray = { 3 };
		int[] queueSizeArray = { 10 };
		int[] executionTimeArray = { 10000 };

		// Loop through all possible combinations of values
		for(int nbProducteurs:nbProducteursArray)
			{
			for(int nbConsommateurs:nbConsommateursArray)
				{
				for(int queueSize:queueSizeArray)
					{
					for(int executionTime:executionTimeArray)
						{

						try
							{
							UseMain.run(nbProducteurs, nbConsommateurs, queueSize, executionTime);

							//join le useMain?
							}
						catch (InterruptedException e)
							{
							// TODO Auto-generated catch block
							e.printStackTrace();
							}

						importantValues = PerformanceCalculator.getImportantValues();
						importantValues.add(0, (double)nbProducteurs);
						importantValues.add(0, (double)nbConsommateurs);
						importantValues.add(0, (double)queueSize);
						importantValues.add(0, (double)executionTime);

						// Add the values to the CSV string
						for(Double value:importantValues)
							{
							sb.append(value).append(";");
							}
						sb.deleteCharAt(sb.length() - 1);
						sb.append("\n");
						}
					}
				}
			}
		writeToFile(sb);
		}

	private static void writeToFile(StringBuilder sb)
		{
		try
			{
			File file = new File(".\\test.csv");
			FileWriter fileWriter = new FileWriter(file);
			fileWriter.write(sb.toString());
			fileWriter.close();
			}
		catch (IOException e)
			{
			e.printStackTrace();
			}
		}
	}
