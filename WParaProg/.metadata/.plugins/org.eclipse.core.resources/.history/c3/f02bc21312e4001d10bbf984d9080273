
package ch.hearc.SA.labo2.BlockingQueue;

import java.util.Arrays;
import java.util.Random;
import java.util.concurrent.BlockingQueue;

public class Producteur implements Runnable
	{

	private BlockingQueue<int[]> queue;

	public Producteur(BlockingQueue<int[]> queue)
		{
		this.queue = queue;
		}

	@Override
	public void run()
		{
		String name = Thread.currentThread().getName();

		System.out.println(name + " started");

		while(true)
			{

			try
				{
				Thread.sleep(1000);
				Random rand = new Random();

				int[] array = rand.ints(100000, 10, 100000).toArray();
				queue.put(array);
				System.out.println("\n" + name + " creating an array : " + Arrays.toString(new_array) + "\n");

				}
			catch (InterruptedException e)
				{
				// TODO Auto-generated catch block
				e.printStackTrace();
				}

			}
		}

	}
